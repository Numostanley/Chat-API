# Generated by Django 4.2.6 on 2024-01-23 13:50

import apis.users.enums
import apis.users.model_helpers
import django.contrib.auth.models
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('date_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('id', models.CharField(db_index=True, default=apis.users.model_helpers.generate_user_id, editable=False, max_length=60, primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(blank=True, default='', max_length=70)),
                ('middle_name', models.CharField(blank=True, default='', max_length=70)),
                ('last_name', models.CharField(blank=True, default='', max_length=70)),
                ('gender', models.CharField(blank=True, default='', max_length=10)),
                ('email', models.EmailField(blank=True, default='', max_length=100)),
                ('email_verified', models.BooleanField(default=False)),
                ('username', models.CharField(blank=True, default='', max_length=50, unique=True)),
                ('phone_number', models.CharField(blank=True, default='', max_length=15)),
                ('profile_picture', models.URLField(blank=True, default='')),
                ('password', models.CharField(blank=True, default='', max_length=240, null=True)),
                ('two_fa_enabled', models.BooleanField(default=False)),
                ('two_fa_medium', models.CharField(default=apis.users.enums.TwoFactorAuthenticationMedium['SMS'], max_length=15)),
                ('phone_number_verified', models.BooleanField(default=False)),
                ('date_of_birth', models.DateField(null=True)),
                ('address', models.CharField(blank=True, default='', max_length=200)),
                ('city', models.CharField(blank=True, default='', max_length=50)),
                ('state', models.CharField(blank=True, default='', max_length=50)),
                ('state_of_residence', models.CharField(blank=True, default='', max_length=50)),
                ('postal_code', models.CharField(blank=True, default='', max_length=50)),
                ('groups', models.JSONField(default=list, null=True)),
                ('is_first_login', models.BooleanField(default=False)),
                ('is_suspended', models.BooleanField(default=False)),
                ('is_banned', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(default='', max_length=20)),
                ('marital_status', models.CharField(default='', max_length=20)),
                ('state_of_origin', models.CharField(default='', max_length=40)),
                ('is_super_user', models.BooleanField(default=False)),
                ('role', models.CharField(default='', max_length=20)),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'ordering': ['first_name', 'last_name'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
